{"remainingRequest":"/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/src/views/Tema4.vue?vue&type=template&id=7b1c7432&lang=pug","dependencies":[{"path":"/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/src/views/Tema4.vue","mtime":1742502723728},{"path":"/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/122154_CF08_GESTION_DE_DESTINOS_TURISTICOS/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}